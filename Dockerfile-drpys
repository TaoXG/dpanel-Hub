# 修复：使用存在的 Node 22.x + Alpine 3.20 组合（Node 22 官方推荐的 Alpine 版本）
FROM node:22.16.0-alpine3.20

# 1. 彻底清理残留缓存，避免旧文件干扰
RUN rm -rf /var/cache/apk/* && \
    rm -rf /usr/lib/python3*/*-packages && \
    rm -rf /root/.cache/pip

# 2. 先安装基础工具，再单独安装Python（拆分步骤减少冲突）
RUN apk add --no-cache bash coreutils curl

# 3. 安装Python3及pip（Alpine 3.20 中 Python 3.11 的默认版本）
# 注：Alpine 3.20 中 py3-pip 版本已更新，无需强行指定旧版本（避免版本不匹配）
RUN apk add --no-cache \
    python3 \
    py3-pip \
    py3-setuptools

# 4. 验证Python和pip的可执行路径（关键：确保命令能被正确找到）
RUN echo "Python路径: $(which python3)" && \
    echo "pip路径: $(which pip3)" && \
    python3 --version && \
    pip3 --version

# 5. 解决Alpine中pip可能的SSL问题（添加证书）
RUN apk add --no-cache ca-certificates && \
    update-ca-certificates

# 6. 升级pip（使用python3 -m pip的方式，比直接用pip3更可靠）
RUN echo "升级pip" && \
    python3 -m pip install --no-cache-dir --upgrade pip

# 7. 安装编译依赖（为后续lxml等包做准备）
RUN apk add --no-cache \
    gcc \
    musl-dev \
    python3-dev \
    libxml2-dev \
    libxslt-dev \
    # 注：基础镜像已包含nodejs和npm，无需重复安装
    coreutils

# 8. 设置时区
RUN apk add --no-cache tzdata && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone && \
    rm -rf /var/cache/apk/*

# 9. 安装Python依赖包
RUN python3 -m pip install --no-cache-dir requests
RUN python3 -m pip install --no-cache-dir lxml
RUN python3 -m pip install --no-cache-dir pycryptodome
RUN python3 -m pip install --no-cache-dir ujson
RUN python3 -m pip install --no-cache-dir pyquery
RUN python3 -m pip install --no-cache-dir jsonpath
RUN python3 -m pip install --no-cache-dir json5
RUN python3 -m pip install --no-cache-dir jinja2
RUN python3 -m pip install --no-cache-dir cachetools
RUN python3 -m pip install --no-cache-dir pympler

WORKDIR /drpy-node
EXPOSE 5757
CMD ["node", "index.js"]
